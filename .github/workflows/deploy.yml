name: CI/CD and Deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

# Set environment variables for the workflow
env:
  NODE_VERSION: '20'
  SURFER_SERVER: test.rccgis.org
  
# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: Run Tests
        run: npm test --if-present
        
      - name: Lint
        run: npx astro check
        
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist
          
  deploy-gh-pages:
    name: Deploy to GitHub Pages
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
  deploy-cloudron:
    name: Deploy to Cloudron Surfer
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Bitwarden CLI
        run: |
          npm install -g @bitwarden/cli
          
      - name: Install Surfer CLI
        run: npm install -g cloudron-surfer
        
      - name: Configure and Deploy to Cloudron
        env:
          SURFER_TOKEN: ${{ secrets.SURFER_API_TOKEN }}
        run: |
          surfer config --server ${{ env.SURFER_SERVER }} --token $SURFER_TOKEN
          surfer put dist/* /
