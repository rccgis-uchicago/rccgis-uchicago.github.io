name: Deploy to GitHub Pages

on:
  push:
    branches: [main, master]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

env:
  NODE_VERSION: '20'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
          retention-days: 1
          
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
  deploy-cloudron:
    name: Deploy to Cloudron Surfer
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Bitwarden CLI
        run: |
          npm install -g @bitwarden/cli
          
      - name: Install Surfer CLI
        run: npm install -g cloudron-surfer
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: pages-artifact
          path: dist
          
      - name: List files for debugging
        run: |
          ls -la
          ls -la dist/
          
      - name: Configure and Deploy to Cloudron
        env:
          SURFER_TOKEN: ${{ secrets.SURFER_API_TOKEN }}
        run: |
          surfer config --server ${{ env.SURFER_SERVER }} --token $SURFER_TOKEN
          surfer put dist/* /
